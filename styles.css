body {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    background-color: #282c34;
    font-family: 'Arial', sans-serif;
    color: #ffffff;
    margin: 0;
    overflow: hidden; /* Чтобы избежать прокрутки */
}

.game {
    position: relative; /* Для позиционирования картинки */
    padding: 20px;
    background-color: #282c34;
    background: #282c34;
    border-radius: 30px;
    aspect-ratio: 10;
}

.scoreboard {
    display: flex;
    justify-content: space-around;
    margin-bottom: 20px;
    position: relative; /* Для позиционирования относительно родителя */
    z-index: 1; /* Чтобы счет был выше картинки */
    animation: gradientColor 5s ease infinite;
}

.player {
    font-size: 1.5em;
    font-weight: bold;
}

.board {
    display: grid;
    grid-template-columns: repeat(3, 100px);
    grid-template-rows: repeat(3, 100px);
    gap: 10px;
    margin-bottom: 20px;
    border-radius: 10px; /* Закругленные углы */
    overflow: hidden; /* Чтобы углы ячеек не выходили за границы */
}

.cell {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100px;
    height: 100px;
    background-color: #61dafb;
    border: 2px solid #20232a;
    font-size: 2em;
    cursor: pointer;
    transition: background-color 0.3s ease, transform 0.3s ease;
}

.cell:hover {
    background-color: #21a1f1;
    transform: scale(1.1);
}

.cell::before {
    content: attr(data-symbol);
    font-size: 2em;
    font-weight: bold;
    color: #202020;
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: 100%;
    transition: transform 0.3s ease;
}

.cell:hover::before {
    transform: scale(1.1);
}

.status {
    font-size: 1.5em;
    margin-top: 20px;
}

.buttons {
    display: flex;
    justify-content: center;
    gap: 15px; /* Расстояние между кнопками */
    margin-top: 20px;
}

button {
    padding: 10px 20px;
    font-size: 1em;
    cursor: pointer;
    border-radius: 50%; /* Максимально закругленные углы */
    border: 5px solid #61dafb; /* Цвет контура */
    background-color: #282c34; /* Внутренний цвет */
    color: #fff; /* Цвет текста */
    transition: background-color 0.3s ease, border-color 0.50s ease;
    width: 50px; /* Ширина кнопки */
    height: 50px; /* Высота кнопки */
    display: flex;
    justify-content: center;
    align-items: center;
}

button:hover {
    background-color: #21a1f1;
    border-color: #21a1f1;
}

button {
    animation: rotate 5s;
}

@keyframes rotate {
    from {
        transform: rotate(360deg);
    }
    to {
        transform: rotate(-720deg);
    }
}

#resetWins {
    border-radius: 15px; /* Закругленные углы 15px */
    width: auto; /* Автоматическая ширина */
    height: auto; /* Автоматическая высота */
    padding: 10px 20px; /* Внутренние отступы */
    animation: none; /* Убираем анимацию */
}

.win {
    background-color: #66d666 !important;
}

.image-container {
    position: relative;
    transform: translateX(19000%) translateY(0%);
}

.image-container img {
    max-width: 300%; /* Увеличиваем размер изображения */
    height: auto;
}

  @keyframes gradientColor {
    0% {
      color: #7effff;
    }
    50% {
      color: #21a1f1;
    }
    100% {
      color: #7effff;
    }
  }

@layer demo {
  @property --color1POSx {
    inherits: false;
    syntax: "<percentage>";
    initial-value: 0%;
  }
  
  @property --color1POSy {
    inherits: false;
    syntax: "<percentage>";
    initial-value: 0%;
  }
  
  @property --color2POSx {
    inherits: false;
    syntax: "<percentage>";
    initial-value: 100%;
  }
  
  @property --color2POSy {
    inherits: false;
    syntax: "<percentage>";
    initial-value: 0%;
  }
  
  @property --color3POSx {
    inherits: false;
    syntax: "<percentage>";
    initial-value: 100%;
  }
  
  @property --color3POSy {
    inherits: false;
    syntax: "<percentage>";
    initial-value: 100%;
  }
  
  @property --color4POSx {
    inherits: false;
    syntax: "<percentage>";
    initial-value: 0%;
  }
  
  @property --color4POSy {
    inherits: false;
    syntax: "<percentage>";
    initial-value: 100%;
  }
  
  @keyframes --up-n-down-1 {
    0%, 100% { --color1POSy: 0% }
    50%      { --color1POSy: 100% }
  }
  
  @keyframes --side-to-side-1 {
    0%, 100% { --color1POSx: 0% }
    50%      { --color1POSx: 100% }
  }
  
  @keyframes --side-to-side-2 {
    0%, 100% { --color2POSx: 100% }
    50%      { --color2POSx: 0% }
  }
  
  @keyframes --up-n-down-2 {
    0%, 100% { --color2POSy: 0% }
    50%      { --color2POSy: 100% }
  }
  
  @keyframes --side-to-side-3 {
    0%, 100% { --color3POSx: 100% }
    50%      { --color3POSx: 0% }
  }
  
  @keyframes --up-n-down-3 {
    0%, 100% { --color3POSy: 100% }
    50%      { --color3POSy: 0% }
  }
  
  @keyframes --side-to-side-4 {
    0%, 100% { --color4POSx: 0% }
    50%      { --color4POSx: 100% }
  }
  
  @keyframes --up-n-down-4 {
    0%, 100% { --color4POSy: 100% }
    50%      { --color4POSy: 0% }
  }
  
.game::before {
    --color1LCH: 70% .5 150;
    --color2LCH: 70% .5 330;
    --color3LCH: 70% .5 270;
    --color4LCH: 70% .5 100;
    
    --gradient-size: 75vw;
    --space:;
    
    content:"";
    display: block;
    position: absolute;
    z-index: -1;
    inset: -150px;
    
    background-image: 
      radial-gradient(
        var(--gradient-size) circle at var(--color1POSx) var(--color1POSy) var(--space), 
        oklch(var(--color1LCH)), oklch(var(--color1LCH) / 0%)
      ),
      radial-gradient(
        var(--gradient-size) circle at var(--color2POSx) var(--color2POSy) var(--space), 
        oklch(var(--color2LCH)), oklch(var(--color2LCH) / 0%)
      ),
      radial-gradient(
        var(--gradient-size) circle at var(--color3POSx) var(--color3POSy) var(--space), 
        oklch(var(--color3LCH)), oklch(var(--color3LCH) / 0%)
      ),
      radial-gradient(
        var(--gradient-size) circle at var(--color4POSx) var(--color4POSy) var(--space), 
        oklch(var(--color4LCH)), oklch(var(--color4LCH) / 0%)
      )
    ;
    mask-image: radial-gradient(closest-side circle at center, #000, #0000);
    
    @supports (background: linear-gradient(in oklab, white, black)) {
      --space: in oklab;
    }
    
    animation: 
      --side-to-side-1 4s linear -1s infinite,
      --up-n-down-2 4s linear -1s infinite, 
      --side-to-side-2 4s linear infinite,
      --up-n-down-3 4s linear infinite, 
      --side-to-side-3 4s linear -1s infinite,
      --up-n-down-4 4s linear -1s infinite, 
      --side-to-side-4 4s linear infinite
    ;
  }





@layer support.demo {
  html {
    display: grid;
    min-block-size: 100%;
  }
  
  body {
    display: grid;
    place-content: center;
    padding: var(--size-5);
    gap: var(--size-5);
  } 
